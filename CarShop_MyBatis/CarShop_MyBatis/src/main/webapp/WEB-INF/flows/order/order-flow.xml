<?xml version="1.0" encoding="UTF-8"?>

<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
      http://www.springframework.org/schema/webflow/spring-webflow.xsd">
      
      <var name="order" class="com.carshop.domain.Order"/>
      
      
      <action-state id="addCartToOrder">
		<evaluate expression="cartServiceImpl.validateCart(requestParameters.cartId)" result="order.cart"></evaluate>
      	<transition to="orderCartWarning" on-exception="com.carshop.exception.CartException" />
      	<transition to="orderCustomerInfo"/>
      </action-state>
      
      <view-state id="orderCartWarning">
   		<transition to="endState"/>
      </view-state>
      
      <view-state id="orderCustomerInfo" model="order">
		<transition on="customerInfo" to="orderShippingInfo"/>
      </view-state>
      
      <view-state id="orderShippingInfo" model="order">
		<transition on="shippingInfo" to="orderConfirmation"/>
		<transition on="backToCustomerInfo" to="orderCustomerInfo"/>
      </view-state>
      
      <view-state id="orderConfirmation">
		<transition on="orderConfirm" to="confirmOrder"/>
		<transition on="backToShippingInfo" to="orderShippingInfo"/>
      </view-state>
      
      <!-- <action-state> : 특정 시점에서 페이지의 흐름을 제어한다(결과(result)를 기반으로 다른 상태로 전환한다.) -->
      <action-state id="confirmOrder">
      <!-- <evaluate> : 매서드를 호출한 결과 값을 사용하여 분기한다. -->
      <!-- ex) 주문내용을 DB에 저장하는 매서드를 호출하는 경우[결과(result) : success] & [결과(result) : fail] -->
      	<evaluate expression="orderServiceImpl.saveOrder(order)" result="order.orderId"/>
      	<transition to="orderFinished"/>
      </action-state>
      
      <view-state id="orderFinished" model="order">
		<transition to="endState"/>
      </view-state>
      
      <end-state id="endState"/>
      
   	<global-transitions>
		<transition on="cancel" to="endState"/>
	</global-transitions>




      
</flow>